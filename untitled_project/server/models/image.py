# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from untitled_project.server.models.base_model_ import Model
from untitled_project.server import util


class Image(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, data: str=None, url: str=None, mime: str=None, caption: str=None, copy: str=None):  # noqa: E501
        """Image - a model defined in Swagger

        :param id: The id of this Image.  # noqa: E501
        :type id: int
        :param data: The data of this Image.  # noqa: E501
        :type data: str
        :param url: The url of this Image.  # noqa: E501
        :type url: str
        :param mime: The mime of this Image.  # noqa: E501
        :type mime: str
        :param caption: The caption of this Image.  # noqa: E501
        :type caption: str
        :param copy: The copy of this Image.  # noqa: E501
        :type copy: str
        """
        self.swagger_types = {
            'id': int,
            'data': str,
            'url': str,
            'mime': str,
            'caption': str,
            'copy': str
        }

        self.attribute_map = {
            'id': 'id',
            'data': 'data',
            'url': 'url',
            'mime': 'mime',
            'caption': 'caption',
            'copy': 'copy'
        }
        self._id = id
        self._data = data
        self._url = url
        self._mime = mime
        self._caption = caption
        self._copy = copy

    @classmethod
    def from_dict(cls, dikt) -> 'Image':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Image of this Image.  # noqa: E501
        :rtype: Image
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Image.


        :return: The id of this Image.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Image.


        :param id: The id of this Image.
        :type id: int
        """

        self._id = id

    @property
    def data(self) -> str:
        """Gets the data of this Image.


        :return: The data of this Image.
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data: str):
        """Sets the data of this Image.


        :param data: The data of this Image.
        :type data: str
        """

        self._data = data

    @property
    def url(self) -> str:
        """Gets the url of this Image.


        :return: The url of this Image.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this Image.


        :param url: The url of this Image.
        :type url: str
        """

        self._url = url

    @property
    def mime(self) -> str:
        """Gets the mime of this Image.


        :return: The mime of this Image.
        :rtype: str
        """
        return self._mime

    @mime.setter
    def mime(self, mime: str):
        """Sets the mime of this Image.


        :param mime: The mime of this Image.
        :type mime: str
        """

        self._mime = mime

    @property
    def caption(self) -> str:
        """Gets the caption of this Image.


        :return: The caption of this Image.
        :rtype: str
        """
        return self._caption

    @caption.setter
    def caption(self, caption: str):
        """Sets the caption of this Image.


        :param caption: The caption of this Image.
        :type caption: str
        """

        self._caption = caption

    @property
    def copy(self) -> str:
        """Gets the copy of this Image.


        :return: The copy of this Image.
        :rtype: str
        """
        return self._copy

    @copy.setter
    def copy(self, copy: str):
        """Sets the copy of this Image.


        :param copy: The copy of this Image.
        :type copy: str
        """

        self._copy = copy
